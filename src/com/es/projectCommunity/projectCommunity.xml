<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ProjectCommunity">
	<select id="projectList" parameterType="hashmap" resultType="com.es.projectCommunity.ProjectCommunityDto">
		select * from project_community order by write_time desc limit #{start}, 10
	</select> 
	<select id="projectListCount" resultType="int" >
		select count(*) from project_community 
	</select> 
	<select id="selectTitleList" parameterType="hashmap" resultType="com.es.projectCommunity.ProjectCommunityDto">
		select * from project_community where title like CONCAT('%',#{condition},'%') order by write_time desc limit #{start}, 10
	</select>
	<select id="selectTitleListCount" parameterType="hashmap" resultType="int">
		select count(*) from project_community where title like CONCAT('%',#{condition},'%')
	</select>
	<select id="selectContentList" parameterType="hashmap" resultType="com.es.projectCommunity.ProjectCommunityDto">
		select * from project_community where content like CONCAT('%',#{condition},'%') order by write_time desc limit #{start}, 10
	</select>
	<select id="selectContentListCount" parameterType="hashmap" resultType="int">
		select count(*) from project_community where content like CONCAT('%',#{condition},'%') 
	</select>
	<select id="selectTCList" parameterType="hashmap" resultType="com.es.projectCommunity.ProjectCommunityDto">
		select * from project_community where content like CONCAT('%',#{condition},'%')
		or title like CONCAT('%',#{condition},'%')
		order by write_time desc limit #{start}, 10
	</select>
	<select id="selectTCListCount" parameterType="hashmap" resultType="int">
		select count(*) from project_community where content like CONCAT('%',#{condition},'%')
		or title like CONCAT('%',#{condition},'%')
	</select>
	<select id="selectWriterList" parameterType="hashmap" resultType="com.es.projectCommunity.ProjectCommunityDto">
		select * from project_community where writer like CONCAT('%',#{condition},'%') order by write_time desc limit #{start}, 10
	</select> 
	<select id="selectWriterListCount" parameterType="hashmap" resultType="int">
		select count(*) from project_community where writer like CONCAT('%',#{condition},'%')
	</select> 
	
	<select id="projectDetail" parameterType="int" resultType="com.es.projectCommunity.ProjectCommunityDto">
		select * from project_community where project_no=#{project_no}
	</select>
	<insert id="projectWrite" parameterType="com.es.projectCommunity.ProjectCommunityDto">
		insert into project_community(classification, title, content, writer, write_time, file_path, file_save_name, file_ori_name) values(#{classification},#{title},#{content},#{writer},now(),#{file_path},#{file_save_name},#{file_ori_name}) 
	</insert>
	<update id="updateHit" parameterType="com.es.projectCommunity.ProjectCommunityDto">
  		update project_community set hit=#{hit}+1 where project_no=#{project_no}
  	</update> 	
	<update id="projectModify" parameterType="com.es.projectCommunity.ProjectCommunityDto">
  		update project_community set classification=#{classification}, title=#{title}, content=#{content}, writer=#{writer}, file_path=#{file_path}, file_save_name=#{file_save_name}, file_ori_name=#{file_ori_name}	where project_no=#{project_no}
  	</update> 
  	<delete id="projectDelete" parameterType="int">
  		delete from project_community where project_no=#{project_no}
  	</delete>	
  	
  	<!-- comment -->
  	<insert id="commentWrite" parameterType="com.es.projectCommunity.ProjectCommunityDto">
		<selectKey resultType="int" keyProperty="iqgrno" order="BEFORE">
			select ifnull(max(reply_no)+1,1) from project_community_reply
		</selectKey>
  		<![CDATA[
		insert into project_community_reply(grno, seq, dep, project_no, content, writer, write_time, parents_no) 
		values(if( #{grno}=0, #{iqgrno}, #{grno}),#{seq},#{dep},#{project_no},#{content},#{writer},now(),#{parents_no}) 
		]]>
	</insert>
	<update id="updateReq" parameterType="com.es.projectCommunity.ProjectReplyDto">
  		<![CDATA[
  		update project_community_reply set seq=seq+1 where grno=#{grno} and seq >= #{seq}
  		]]>
  	</update>
  	<select id="commentList" parameterType="int" resultType="com.es.projectCommunity.ProjectReplyDto">
  		select * from project_community_reply where project_no=#{project_no} order by grno desc, seq desc
  	</select>
  	<update id="updateComment" parameterType="hashmap">
  		<![CDATA[
  		update project_community_reply set content=#{content} where reply_no=#{reply_no}
  		]]>
  	</update>
  	<delete id="deleteComment" parameterType="hashmap">
  		<![CDATA[
  		delete from project_community_reply where reply_no=#{delete_no}
  		]]>
  	</delete>
</mapper>