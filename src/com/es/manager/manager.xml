<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Manager">
	<select id="EmpMainList" parameterType="int" resultType="com.es.manager.EmpListDto">
		select e.emp_no emp_no, e.name name, d.dept_name dept_name, p.position_name position_name
		from employees e, department d, position p
		where e.dept_no = d.dept_no and e.position_no = p.position_no
		order by e.emp_no asc
		limit #{start}, 10
	</select>
	<select id="InstMainList" parameterType="int" resultType="com.es.manager.InstListDto">
		select emp_no, instructor_no, name
		from instructor
		where approval_state = 3
		order by instructor_no asc
		limit #{start}, 10
	</select>
	<select id="EmpSearchList" parameterType="hashmap" resultType="com.es.manager.EmpListDto">
		select e.emp_no emp_no, e.name name, d.dept_name dept_name, p.position_name position_name
		from employees e, department d, position p
		where e.dept_no = d.dept_no and e.position_no = p.position_no and
		<if test='dept != "nothing"'>
			e.dept_no = #{dept} and
		</if>
		<if test='pos != "nothing"'>
			e.position_no = #{pos} and
		</if>
		<choose>
			<when test='cat == "number"'>
				e.emp_no like concat('%', #{word}, '%')
			</when>
			<when test='cat == "name"'>
				e.name like concat('%', #{word}, '%')
			</when>
		</choose>
		order by e.emp_no asc
		limit #{start}, 10
	</select>
	<select id="InstSearchList" parameterType="hashmap" resultType="com.es.manager.InstListDto">
		select emp_no, instructor_no, name from instructor where
		<choose>
			<when test="type == 'internal'">
				emp_no is not null and
			</when>
			<when test="type == 'external'">
				emp_no is null and
			</when>
		</choose>
		<choose>
			<when test="cat == 'number'">
				instructor_no like concat('%', #{word}, '%') and
			</when>
			<when test="cat == 'name'">
				name like concat('%', #{word}, '%') and
			</when>
		</choose>
		approval_state = 3
		order by instructor_no asc
		limit #{start}, 10
	</select>
	
	<select id="EmpDetail" parameterType="String" resultType="com.es.manager.EmpListDto">
		SELECT 	e.emp_no emp_no, e.name name, d.dept_name dept_name,
				p.position_name position_name
		FROM 	employees e, department d, position p
		WHERE 	e.dept_no = d.dept_no
		AND		e.position_no = p.position_no
		AND 	e.emp_no = #{emp_no}
	</select>
	
	<select id="InstDetail" parameterType="String" resultType="com.es.instructor.InstructorDto">
		SELECT *
		FROM instructor
		WHERE instructor_no = #{inst_no}
	</select>
	
	<select id="ExInstructorCount" resultType="int">
		select count(*) from external_instructor;
	</select>
	
	<select id="ExInstructorCategoryCount" parameterType="hashmap" resultType="int">
		select count(*) from external_instructor where
		<choose>
			<when test="cat == 'number'">
				instructor_no like concat('%', #{word}, '%')
			</when>
			<when test="cat == 'name'">
				name like concat('%', #{word}, '%')
			</when>
		</choose>
	</select>
	
	<select id="ExInstMainList" parameterType="int" resultType="com.es.manager.ExInstructorDto">
		select * from external_instructor
		order by instructor_no asc
		limit #{start}, 10
	</select>
	
	<select id="ExInstSearchList" parameterType="hashmap" resultType="com.es.manager.ExInstructorDto">
		select count(*) from external_instructor where
		<choose>
			<when test="cat == 'number'">
				instructor_no like concat('%', #{word}, '%')
			</when>
			<when test="cat == 'name'">
				name like concat('%', #{word}, '%')
			</when>
		</choose>
		order by instructor_no asc
		limit #{start}, 10
	</select>
	
	<select id="ExInstDetail" parameterType="String" resultType="com.es.manager.ExInstructorDto">
		SELECT *
		FROM external_instructor
		WHERE instructor_no = #{inst_no}
	</select>
	
	<select id="FindInstNumber" parameterType="String" resultType="String">
		SELECT instructor_no
		FROM instructor
		WHERE instructor_no like concat(#{find_no}, '%')
		ORDER BY instructor_no DESC
		LIMIT 1;
	</select>
	
	<insert id="InsertExInst" parameterType="com.es.manager.ExInstructorDto">
		INSERT INTO external_instructor(instructor_no, name, identity_no, address, phone, email)
		VALUES(#{instructor_no}, #{name}, #{identity_no}, #{address}, #{phone}, #{email})		
	</insert>
	
	<insert id="InsertExInInst" parameterType="hashmap">
		INSERT INTO instructor
		VALUES(#{inst_no}, null, now(), 3, now(), #{name})
	</insert>
	
	<select id="ReqInstList" parameterType="Integer" resultType="com.es.manager.InstListDto">
		SELECT i.instructor_no instructor_no, e.name name, e.emp_no emp_no, d.dept_name dept_name, p.position_name position_name, i.approval_date approval_date
		FROM instructor i, employees e, department d, position p
		WHERE i.emp_no = e.emp_no
		AND e.dept_no = d.dept_no
		AND e.position_no = p.position_no
		AND i.approval_state = #{approval_state}
		ORDER BY i.approval_date;
	</select>
	
	<update id="ChangeReqInst" parameterType="hashmap">
		UPDATE instructor
		SET approval_state = #{approval_state}, approval_date = now()
		WHERE emp_no = #{emp_no}
	</update>
	
	<select id="MustEducationList" resultType="com.es.education.EduCodeDto">
		SELECT *
		FROM education_code
		WHERE edu_target IS NOT NULL
	</select>
	
	<select id="MustEduCationEmpList" parameterType="hashmap" resultType="com.es.manager.EmpListDto">
		SELECT DISTINCT(e.emp_no) emp_no, e.name name, d.dept_name dept_name, p.position_name position_name
		FROM employees e, department d, position p, belong b
		<where>
			<choose>
				<when test="dept != 0">
					(e.dept_no = #{dept} AND e.dept_no = d.dept_no) AND
				</when>
				<when test="dept == 0">
					<choose>
						<when test="belong != 0">
							(d.belong_no = #{belong} AND d.belong_no = b.belong_no AND e.dept_no = d.dept_no) AND
						</when>
						<when test="belong == 0">
							(d.belong_no = b.belong_no AND e.dept_no = d.dept_no) AND
						</when>
					</choose>
				</when>
			</choose>
			<choose>
				<when test="pos != 0">
					(e.position_no = #{pos} AND e.position_no = p.position_no)
				</when>
				<when test="pos == 0">
					(e.position_no = p.position_no)
				</when>
			</choose>
		</where>
	</select>
	
	<select id="MustEduCationStateList" parameterType="Integer" resultType="com.es.manager.MustEduDto">
		SELECT h.emp_no emp_no, l.edu_code edu_code, h.edu_state edu_state
		FROM education_history h, education_list l
		WHERE h.edu_no = l.edu_no AND l.edu_code = #{edu_code}
		ORDER BY h.emp_no ASC
	</select>
	
	<delete id="DeleteReqInst">
		DELETE FROM instructor
		WHERE emp_no = #{emp_no}
	</delete>
</mapper>